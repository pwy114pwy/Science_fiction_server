const express = require('express');
const cors = require('cors');
const path = require('path'); // 导入 path 模块
const swiperRouter = require('./routes/swiper');
const recommendRouter = require('./routes/getAllBooks');
const getBookDetail = require('./routes/getBookDetail');
const searchBook = require('./routes/searchBook');
const getUser = require('./routes/getUser');
const collectBook = require('./routes/collectBook');
const browseHistory = require('./routes/browseHistory');
const submitComment = require('./routes/submitComment.js');
const Illustrated = require('./routes/get_Illustrated.js');
const getCharactersAndRelationships = require('./routes/getCharactersAndRelationships.js');
const getCharactersDetail = require('./routes/getCharactersDetail.js');
const getRelatedCharacters = require('./routes/getRelatedCharacters.js');
const getEvent = require('./routes/getEvent.js');
const getWorldview = require('./routes/getWorldview.js');
const getScience = require('./routes/getScience.js');
const getDiscussion = require('./routes/getDiscussion.js');
const upload_Bookimg = require('./routes/upload_Bookimg.js');
const addBook = require('./routes/addBook.js');
const delBook = require('./routes/delBook.js');
const getComment = require('./routes/getComment.js');
const AuthorManage = require('./routes/AuthorManage.js');
const upload_Illustrated = require('./routes/upload_Illustrated.js');
const illustratedManage = require('./routes/illustratedManage.js');
const CharactersManage = require('./routes/CharactersManage.js');
const upload_Character = require('./routes/upload_Character.js');
const relationshipManage = require('./routes/relationshipManage.js');
const eventManage = require('./routes/eventManage.js');
const worldviewManage = require('./routes/worldviewManage.js');
const scienceManage = require('./routes/ScienceManage.js');

const app = express();
app.use(express.json());
app.use(cors());
app.use('/uploads', express.static(path.join(__dirname, 'uploads')));
app.use(swiperRouter);
app.use(getBookDetail);
app.use(recommendRouter);
app.use(searchBook);
app.use(getUser);
app.use(collectBook);
app.use(collectBook);
app.use(browseHistory);
app.use(submitComment);
app.use(Illustrated);
app.use(getCharactersAndRelationships);
app.use(getCharactersDetail);
app.use(getRelatedCharacters);
app.use(getEvent);
app.use(getWorldview);
app.use(getScience);
app.use(getDiscussion);
app.use(upload_Bookimg);
app.use(addBook);
app.use(delBook);
app.use(getComment);
app.use(AuthorManage);
app.use(upload_Illustrated);
app.use(illustratedManage);
app.use(CharactersManage);
app.use(upload_Character);
app.use(relationshipManage);
app.use(EventManage);
app.use(worldviewManage);
app.use(scienceManage);


const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});